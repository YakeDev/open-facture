generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Currency {
  USD
  EUR
  CDF
  GBP
  CAD
}

enum Role {
  admin
  accountant
  employee
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  passwordHash      String
  name              String?
  role              Role      @default(employee)
  defaultCurrency   Currency  @default(USD)
  logoUrl           String?
  tokenVersion      Int       @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  invoices          Invoice[]
  exchangeSnapshots ExchangeRateSnapshot[]
}

model Invoice {
  id                     String     @id @default(uuid())
  userId                 String
  number                 String
  title                  String?
  issueDate              DateTime
  dueDate                DateTime?
  terms                  String?
  customerName           String
  customerEmail          String?
  customerAddress        String?
  shipTo                 String?
  currency               Currency   @default(USD)
  subtotal               Decimal    @db.Decimal(12, 2)
  taxRate                Decimal?   @db.Decimal(5, 2)
  taxAmount              Decimal?   @db.Decimal(12, 2)
  total                  Decimal    @db.Decimal(12, 2)
  amountPaid             Decimal    @db.Decimal(12, 2) @default(0)
  balanceDue             Decimal    @db.Decimal(12, 2)
  notes                  String?
  additionalTerms        String?
  currencyUsdRate        Decimal?   @db.Decimal(12, 6)
  exchangeRatesSnapshot  Json?
  createdAt              DateTime   @default(now())
  updatedAt              DateTime   @updatedAt

  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      InvoiceItem[]

  @@unique([userId, number])
  @@index([userId, issueDate])
}

model InvoiceItem {
  id          String   @id @default(uuid())
  invoiceId   String
  description String
  quantity    Decimal  @db.Decimal(12, 2)
  unitCost    Decimal  @db.Decimal(12, 2)
  amount      Decimal  @db.Decimal(12, 2)

  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
}

model ExchangeRateSnapshot {
  id        String    @id @default(uuid())
  userId    String
  currency  Currency
  usdRate   Decimal   @db.Decimal(12, 6)
  payload   Json
  createdAt DateTime  @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, currency])
}
